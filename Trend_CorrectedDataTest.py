import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
def Percentage2Percentile(Percentage):
    Percentage = Percentage[::-1]
    Percentile = 100 - np.nancumsum(Percentage)

    Percentile_cor = []
    for index, value in enumerate(Percentile):
        if value < 0:
            Percentile_cor.append(0)
        else:
            Percentile_cor.append(value)

    Percentile_cor = Percentile_cor[::-1]
    
    return Percentile_cor

def power_fit(x, y):
  
  coefs = np.polyfit(np.log(x),np.log(y),1)
  a = np.exp(coefs[1])
  b = coefs[0]
  print(a,b)
  return a*x**b 

# =========================================================
def PercentageFromSum(Percentage_Arr):
    Sum = np.sum(Percentage_Arr)
    Corrected_Percentages = []
    for index, value in enumerate(Percentage_Arr):
        Corrected_Percentages.append((value / Sum)*100)

    return Corrected_Percentages
y = [0.006298243, 0.061092902, 0.389515907, 1.201661971, 1.461418844, 1.706028976, 1.800819313, 2.754808740, 2.868175400, 2.637356312, 
     0.028687557, 0.324296756, 0.892732240, 2.386754961, 2.063672387, 2.250170030, 1.585497711, 2.010846554, 2.360208472, 1.408758334, 
     0.012533098, 0.086701712, 0.391868809, 1.090766865, 1.291147630, 1.760442403, 1.948923023, 1.968783132, 1.901700780, 3.116551030, 
     0.014860290, 0.244039748, 0.808932644, 2.500390308, 1.890088604, 1.844748557, 1.295475214, 1.538242024, 2.099097102, 2.385747995, 
     0.085386041, 1.911496084, 4.879089659, 4.359409211, 2.239148380, 1.095496914, 0.840235690, 0.970746143, 1.265580673, 2.338092826, 
     0.014596057, 0.205829926, 0.737333857, 1.296641217, 1.441333403, 0.883581890, 0.585719784, 0.911704332, 1.436067629, 3.635529233, 
     0.016774470, 0.410741375, 1.018263591, 2.996385953, 2.103186877, 1.886132815, 1.136873949, 1.069792648, 1.237756491, 2.477908870, 
     0.156548304, 0.646773382, 1.585973806, 1.778284219, 1.185144988, 1.221977414, 1.797048781, 2.064949118, 2.605034193, 
     0.009308862, 0.127832612, 0.526348791, 1.739912582, 1.163812993, 1.125788403, 0.875865139, 1.326532700, 2.406823826, 4.593272080, 
     0.250040693, 3.606171445, 6.372695130, 9.509593308, 3.570166741, 2.042274531, 1.045356245, 0.597044031, 0.534886862, 1.922558653, 
     0.033028723, 0.201814431, 0.587314536, 1.388890711, 1.180915141, 0.850677557, 0.769290044, 0.894108519, 1.060395236, 2.365849644, 
     0.009102505, 0.094155558, 0.552772293, 1.652464332, 1.118256294, 1.727254125, 1.186984253, 1.245432608, 1.963340317, 4.047896246, 
     0.061818268, 0.165557711, 0.505636407, 2.052803814, 1.687113748, 1.119131785, 0.533748735, 0.355013639, 0.626481734, 5.570994689, 
     0.026718535, 0.166929925, 0.747655796, 3.246100770, 3.011817180, 4.128461339, 1.991945828, 1.180256437, 0.810444004, 1.413103179, 
     0.007436123, 0.098817577, 0.227081774, 0.746028019, 0.694059280, 1.131439937, 1.298338455, 2.227287393, 2.721519325, 3.028607075, 
     0.011591744, 0.374845037, 1.720850548, 3.142425053, 2.213309775, 1.672216320, 1.031972504, 0.930087264, 1.085096917, 2.112598204, 
     0.022351039, 0.401446877, 1.075600110, 3.892365103, 3.440383748, 3.866052937, 2.337335215, 1.225277184, 0.934493579, 0.920827419, 
     0.057548247, 0.260570437, 1.278242703, 2.067494503, 2.827429069, 2.298391051, 2.239670563, 1.848510579, 2.540354522, 
     0.005400344, 0.109968131, 0.458308246, 1.648210254, 1.899799680, 2.619104272, 1.794386037, 2.555945207, 2.070835640, 2.553518073, 
     0.016086172, 0.217224942, 0.584877435, 1.316592036, 1.423075105, 1.909154631, 2.016414393, 2.876703949, 2.196224931, 2.264886152, 
     0.001165636, 0.165532603, 0.471978478, 1.310896662, 1.118702814, 1.688495617, 1.434390117, 2.101299037, 3.231040023, 4.182895188, 
     0.105585895, 0.658315710, 1.850517525, 2.137649733, 3.292375182, 3.029251215, 3.182791723, 2.191020790, 1.761061264, 
     0.002371008, 0.072934121, 0.271157141, 0.931348750, 1.175201581, 2.370921285, 2.618529400, 3.320224099, 2.966891735, 3.557005648, 
     0.004694864, 0.245748442, 0.956088552, 2.217948552, 2.224855851, 2.094508912, 1.882720804, 2.294661169, 1.827013999, 2.532807497, 
     0.003888582, 0.174843727, 0.486448908, 1.298011268, 1.532958050, 2.389337101, 2.058790819, 2.413558995, 2.060227065, 3.009577816, 
     0.013195617, 0.222944022, 0.654399450, 1.868285946, 1.954355730, 3.098084143, 2.943555621, 3.780451112, 3.000185406, 1.811312655, 
     0.004944230, 0.182262164, 0.705662251, 1.616263501, 1.394916332, 1.765694788, 1.727576530, 2.649618817, 2.262860134, 3.355621121, 
     0.004006055, 0.121560114, 0.298695198, 0.760794439, 0.609600827, 1.192158475, 1.172145168, 2.321035087, 2.957417627, 4.433469150, 
     0.010580400, 0.310080606, 0.821271978, 1.344480635, 1.155211837, 1.557878901, 1.804074696, 2.803580258, 2.622592466, 3.011316667, 
     0.005776786, 0.106623788, 0.216008939, 0.707863894, 0.788599339, 1.863437104, 2.416352442, 3.700652833, 2.433204156, 2.794875335, 
     0.003380196, 0.060247599, 0.132590802, 0.418028353, 0.223576916, 0.631704711, 0.890433462, 1.494685009, 1.702233290, 4.458787821, 
     0.004970026, 0.119221522, 0.314272498, 0.674786482, 0.533599640, 1.231653038, 1.920626109, 4.162172678, 2.869402455, 3.014948075, 
     0.011756432, 0.177908892, 0.288620853, 0.493633456, 0.331550384, 1.196680995, 2.296973714, 4.304289354, 2.818737852, 2.514871975, 
     0.038241251, 0.221792004, 0.168267268, 0.159200731, 0.140773017, 0.440677747, 1.791289404, 4.574870599, 3.337088279, 2.325214831]

x = [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,
     0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1]
x = np.array(x); x = np.squeeze(x); x = x.astype(np.float64)
y = np.array(y); y = np.squeeze(y);  y = y.astype(np.float64)
print(len(y), len(x))
plt.plot(x, power_fit(x,y),label='power-fit', color='k')
plt.xscale('log'); plt.yscale('log')



y = [2.637356312, 0.380653122, 0.076087736, 0.000688115,
1.408758334, 0.116116190, 0.016332546,
3.116551030, 1.320524298, 0.206862576, 0.000257522,
2.385747995, 0.454870235, 0.062342098, 0.057752322,
2.338092826, 0.525032706, 0.091091931, 
3.635529233, 2.579263573, 0.294810354, 0.012483218,
2.477908870, 0.788553528, 0.191976604, 0.014653576,
2.605034193, 0.603196085, 0.062589138,
4.593272080, 1.246408240, 0.225422960,
1.922558653, 0.905474277, 0.251946382, 0.040726704,
2.365849644, 1.718924598, 0.691785278, 0.470700269,
4.047896246, 1.082797653, 0.205427201,
5.570994689, 2.512109507, 0.452655820,
1.413103179, 0.560468691, 0.182729857, 0.026932138,
3.028607075, 0.745938831, 0.077310347, 0.042852454,
2.112598204, 0.886586371, 0.210209612, 0.102953160,
0.920827419, 0.168204471, 0.027425489, 0.000286137,
2.540354522, 0.850652582, 0.192673269, 
2.553518073, 0.995206931, 0.124616771, 
2.264886152, 0.660709821, 0.109929626, 0.000285797,
4.182895188, 0.723633672, 0.043866098, 0.000259068,
1.761061264, 0.390015437, 0.047316117, 0.000243820,
3.557005648, 0.812563258, 0.155407843, 0.000254812,
2.532807497, 0.801840659, 0.111477350, 
3.009577816, 1.091716310, 0.175689245, 
1.811312655, 0.189895983, 0.020686503, 
3.355621121, 1.285953871, 0.176921934, 0.000239569,
4.433469150, 1.656430754, 0.188647914,
3.011316667, 1.045607344, 0.179573160, 0.040452712,
2.794875335, 0.466658600, 0.093282885, 
4.458787821, 2.559939563, 0.421626615, 0.056880488,
3.014948075, 0.843868027, 0.131956962, 0.000276994,
2.514871975, 1.135478629, 0.494824287, 0.199146364,
2.325214831, 0.624444910, 0.195461414, 0.111714438]

x = [1, 2, 4, 8, 1, 2, 4, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 1, 2, 4, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4,
 1, 2, 4,  1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 1, 2, 4, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 
 1, 2, 4, 1, 2, 4,  1, 2, 4, 8, 1, 2, 4, 1, 2, 4, 8, 1, 2, 4,  1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8, 1, 2, 4, 8]

x = np.array(x); x = np.squeeze(x); x = x.astype(np.float64)
y = np.array(y); y = np.squeeze(y);  y = y.astype(np.float64)
print(len(y), len(x))
plt.plot(x, power_fit(x,y),label='power-fit', color='k')
plt.xscale('log'); plt.yscale('log')


def Proffitt_Correction(Percentage_Arr, GrainSz_Arr, Power=-1):
    Corrected_Percentages = []
    for index, value in enumerate(Percentage_Arr):
        Corrected_Percentages.append(value * (GrainSz_Arr[index]**(Power)) )

    return Corrected_Percentages 


GrainSz_1= [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1]
GrainSz_2= [1, 2, 4, 8]
GrainSz = [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1,  2, 4, 8]
test = Proffitt_Correction(Mass_Fraction[1, 1:11], GrainSz_1, Power=1.7561625289441112)
test2 = Proffitt_Correction(Mass_Fraction[1, 11:], GrainSz_2, Power=-2.7819054981411897)
test_t = test + test2
test_t = PercentageFromSum(test_t)
plt.plot(GrainSz, test_t)
plt.plot(GrainSz, dgs_data[1,2:])
plt.plot(GrainSz, sieve_data[1,2:])
plt.xscale('log')
