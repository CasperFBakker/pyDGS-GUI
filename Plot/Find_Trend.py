from Imports.Import_Modules import * 

def power_fit(x, y):
  
  coefs = np.polyfit(np.log(x),np.log(y),1)
  a = np.exp(coefs[1])
  b = coefs[0]
  print(a,b)
  return a*x**b 

L1 = [0.336281331, 1.514600186, 2.648158974, 2.936082868, 1.9058913, 1.2121949, 0.669082021, 1.830354431, 0.598749907, 0.293606821, 0.26024315, 0.352587291, 0.286577927]
GrainSz = [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 8]

X1 = [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425]
T1 = [0.336281331, 1.514600186, 2.648158974, 2.936082868, 1.9058913, 1.2121949, 0.669082021]

X2 = [0.500, 0.710, 1, 2, 4, 8]
T2 = [1.830354431, 0.598749907, 0.293606821, 0.26024315, 0.352587291, 0.286577927]
power_fit(L1, GrainSz)
power_fit(X1, T1)
power_fit(X2, T2)

plt.plot(X1, power_fit(X1, T1),label='power-fit', color='k')
plt.plot(X2, power_fit(X2, T2),label='power-fit', color='k')

plt.scatter(GrainSz, L1)
plt.xscale("log")
plt.yscale("log")
plt.grid(which='major', linewidth=2, linestyle='-')
plt.grid(which='minor', linewidth=1, linestyle='--')

plt.show()


# GrainSz = [0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4,
#            0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 
#            0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4]


# L1 = [0.091243535, 0.752855905, 1.233775853, 1.535596986, 1.207739709, 1.622725828, 1.070896364, 1.656422483, 1.053150975, 0.559621140, 1.084452455, 3.307436876,
#       0.085579555, 0.739493137, 1.168413694, 1.494814151, 1.169205877, 1.578462020, 1.041879983, 1.629730177, 1.046635525, 0.573498012, 1.140947368, 3.633067855,
#       0.106438887, 0.892897295, 1.422616803, 1.737663972, 1.343968383, 1.795742938, 1.182714570, 1.746669570, 1.065044131, 0.510341384, 0.891088747, 3.149523508,
#       0.094000890, 0.811644455, 1.271597679, 1.610541347, 1.248475048, 1.667857529, 1.089415921, 1.674271948, 1.042059039, 0.540230582, 1.058689486, 3.501783624,
#       0.107222385, 0.897743939, 1.431991970, 1.749487548, 1.351680681, 1.803583938, 1.185498397, 1.742138914, 1.057534395, 0.508323952, 0.904084122, 3.34618291]

# X1 = [0.063, 0.125, 0.180, 0.250, 0.063, 0.125, 0.180, 0.250, 0.063, 0.125, 0.180, 0.250, 0.063, 0.125, 0.180, 0.250, 0.063, 0.125, 0.180, 0.250]
# T1 = [0.091243535, 0.752855905, 1.233775853, 1.535596986,
#       0.085579555, 0.739493137, 1.168413694, 1.494814151,
#       0.106438887, 0.892897295, 1.422616803, 1.737663972,
#       0.094000890, 0.811644455, 1.271597679, 1.610541347,
#       0.107222385, 0.897743939, 1.431991970, 1.749487548,]

# X2 = [0.300, 0.355, 0.425, 0.500, 0.710, 0.300, 0.355, 0.425, 0.500, 0.710, 0.300, 0.355, 0.425, 0.500, 0.710, 0.300, 0.355, 0.425, 0.500, 0.710, 0.300, 0.355, 0.425, 0.500, 0.710]
# T2 = [1.207739709, 1.622725828, 1.070896364, 1.656422483, 1.053150975,
#       1.169205877, 1.578462020, 1.041879983, 1.629730177, 1.046635525,
#       1.343968383, 1.795742938, 1.182714570, 1.746669570, 1.065044131,
#       1.248475048, 1.667857529, 1.089415921, 1.674271948, 1.042059039,
#       1.351680681, 1.803583938, 1.185498397, 1.742138914, 1.057534395,]

# X3 = [1, 2, 4, 1, 2, 4, 1, 2, 4, 1, 2, 4, 1, 2, 4]
# T3 = [0.559621140, 1.084452455, 3.307436876,
#       0.573498012, 1.140947368, 3.633067855,
#       0.510341384, 0.891088747, 3.149523508,
#       0.540230582, 1.058689486, 3.501783624,
#       0.508323952, 0.904084122, 3.34618291]


# plt.plot(X1, power_fit(X1, T1),label='power-fit', color='k')
# plt.plot(X2, power_fit(X2, T2),label='power-fit', color='k')
# plt.plot(X3, power_fit(Xpython configure folders file
# plt.grid(which='major', linewidth=2, linestyle='-')
# plt.grid(which='minor', linewidth=1, linestyle='--')

# plt.show()

# Loc1 = [0.091243535, 0.752855905, 1.233775853, 1.535596986, 1.207739709, 1.622725828, 1.070896364, 1.656422483, 1.053150975, 0.559621140, 1.084452455, 3.307436876,
#         0.085579555, 0.739493137, 1.168413694, 1.494814151, 1.169205877, 1.578462020, 1.041879983, 1.629730177, 1.046635525, 0.573498012, 1.140947368, 3.633067855,
#         0.106438887, 0.892897295, 1.422616803, 1.737663972, 1.343968383, 1.795742938, 1.182714570, 1.746669570, 1.065044131, 0.510341384, 0.891088747, 3.149523508,
#         0.094000890, 0.811644455, 1.271597679, 1.610541347, 1.248475048, 1.667857529, 1.089415921, 1.674271948, 1.042059039, 0.540230582, 1.058689486, 3.501783624,
#         0.107222385, 0.897743939, 1.431991970, 1.749487548, 1.351680681, 1.803583938, 1.185498397, 1.742138914, 1.057534395, 0.508323952, 0.904084122, 3.34618291]

# Loc2 = [0.005991785, 0.193324734, 1.406262564, 4.142240316, 3.532837146, 2.768529605, 1.707073224, 1.199305725, 0.360704557, 0.300058230, 0.713583016, 3.499892313,
#         0.005751455, 0.186947271, 1.355716260, 3.980295225, 3.421052131, 2.716801568, 1.632478207, 1.166636897, 0.353090447, 0.308798705, 0.828682159, 3.673216576,
#         0.006555411, 0.210783486, 1.532102860, 4.407762721, 3.738792945, 2.922846700, 1.758665127, 1.213292274, 0.351447036, 0.285056385, 0.715042190, 3.615661819,
#         0.005773194, 0.182032731, 1.370060981, 3.920242034, 3.421796743, 2.675983609, 1.652154930, 1.165929092, 0.352959406, 0.308855711, 0.814539660, 3.983889566,
#         0.005594648, 0.184487914, 1.318097403, 3.859964123, 3.368276733, 2.605183375, 1.613540410, 1.145557893, 0.349094133, 0.314623824, 0.884985148, 4.163560715]

# Loc3 = [0.138777498, 0.996503388, 2.736602060, 4.020144427, 2.649737298, 1.522999626, 0.712059190, 0.455248810, 0.272677775, 0.332258590, 1.030458944, 11.27627728,
#         0.129259380, 0.937825091, 2.544577440, 3.799726981, 2.486464447, 1.459718036, 0.679826281, 0.440275598, 0.271188532, 0.347140208, 1.168925854, 12.77832596,
#         0.141583228, 1.003168005, 2.750933595, 4.002562611, 2.606671212, 1.531132191, 0.720774704, 0.457302090, 0.275466428, 0.333385643, 1.008086678, 11.20388772,
#         0.153546870, 1.095682177, 3.011266900, 4.338361651, 2.805394382, 1.649935819, 0.768337907, 0.478169443, 0.279871100, 0.318872570, 0.853360872, 11.63573193,
#         0.145281382, 1.034673029, 2.803766648, 4.075295302, 2.619494290, 1.525257959, 0.707763416, 0.445337043, 0.263699142, 0.325228697, 1.160468045, 13.13213473 ]

# Loc4 = [0.013856229, 0.245813003, 0.805500204, 1.959608652, 1.640423321, 1.746708138, 1.037461096, 0.808758454, 0.531350243, 0.759460913, 2.467715744, 13.30467602,
#         0.015976919, 0.281923600, 0.923502103, 2.196216048, 1.812960162, 1.901606093, 1.129576015, 0.854134796, 0.537201676, 0.694945189, 1.977998877, 12.42771954,
#         0.018165077, 0.320716909, 1.029362869, 2.421189503, 2.012348768, 2.058753778, 1.221128402, 0.896184596, 0.546335828, 0.651163160, 1.655850552, 11.03725943,
#         0.014150359, 0.248984204, 0.828962506, 2.007609743, 1.664801225, 1.773186867, 1.063607081, 0.826589929, 0.540307097, 0.743717241, 2.181753194, 11.91577691,
#         0.014927550, 0.267440503, 0.861416456, 2.111140418, 1.738209192, 1.845847032, 1.098056254, 0.843031426, 0.545340189, 0.724904458, 2.052427219, 11.05470646 ]


# Loc6 = [0.459606563, 2.070721113, 4.181521120, 4.748291375, 2.813947774, 1.935980055, 0.967717092, 0.546734932, 0.179150762, 0.138519273, 0.699860308, 5.238812438,
#         0.503605169, 2.249638212, 4.557843739, 5.154292923, 2.994547853, 2.068384409, 1.029572820, 0.568952165, 0.181235437, 0.130171001, 0.584094000, 4.416131203,
#         0.417065925, 1.837976950, 3.783398644, 4.279791124, 2.557630527, 1.799425686, 0.907776384, 0.520488822, 0.177975165, 0.152251106, 0.904135734, 5.804116755,
#         0.538033551, 2.381667238, 4.811378083, 5.357489643, 3.196711194, 2.128045669, 1.065607535, 0.588441392, 0.182518507, 0.125071033, 0.512203094, 4.521207730,
#         0.465946035, 2.070512326, 4.284231727, 4.809849312, 2.908046811, 1.983483062, 1.005019294, 0.564373525, 0.184451645, 0.135869132, 0.580546233, 4.341534893]

# Loc7 = [0.223582276, 1.508995549, 2.643832229, 3.031410044, 2.901972843, 2.342896321, 1.198549448, 0.687850375, 0.360826357, 0.586066200, 1.441443290, 2.867010887,
#         0.200936112, 1.359735206, 2.444410586, 2.823876511, 2.717520842, 2.252582841, 1.165074926, 0.688033505, 0.372562877, 0.619338734, 1.345500433, 2.316794460,
#         0.211907564, 1.427625076, 2.531559656, 2.855965558, 2.781268959, 2.281725500, 1.183515993, 0.677832933, 0.363092342, 0.602469662, 1.463650703, 2.387525382,
#         0.174498429, 1.184773028, 2.179322380, 2.464532435, 2.460230059, 2.018626024, 1.072879375, 0.633913240, 0.360108716, 0.668662723, 1.831503248, 2.474250262,
#         0.174466436, 1.206506094, 2.138721866, 2.515871969, 2.455421485, 2.013306837, 1.068036339, 0.633898746, 0.359293397, 0.667318997, 1.874436688, 2.262983703]
# # print(np.shape(Loc1))

# # plt.scatter(GrainSz, Loc1)
# # plt.scatter(GrainSz, Loc2)
# # plt.scatter(GrainSz, Loc3)
# # plt.scatter(GrainSz, Loc4)
# # plt.scatter(GrainSz, Loc6)
# # plt.scatter(GrainSz, Loc7)
# # plt.xscale("log")
# # plt.yscale("log")
# # plt.show()


 
# minSz = np.array([0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4,
#                   0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4, 0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4,
#                   0.063, 0.125, 0.180, 0.250, 0.300, 0.355, 0.425, 0.500, 0.710, 1, 2, 4])
# T1_1 = []; T2_1 = []; T3_1 = []; T1_2 = []; T2_2 = []; T3_2 = []; T1_3 = []; T2_3 = []; T3_3 = []
# T1_4 = []; T2_4 = []; T3_4 = []; T1_6 = []; T2_6 = []; T3_6 = []; T1_7 = []; T2_7 = []; T3_7 = []


# for index, value in enumerate(Loc1):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_1.append(Loc1[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_1.append(Loc1[index])
#         elif minSz[index] >= 1:
#             T3_1.append(Loc1[index])

# power_fit(X1, T1_1)
# power_fit(X2, T2_1)
# power_fit(X3, T3_1)

# for index, value in enumerate(Loc2):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_2.append(Loc2[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_2.append(Loc2[index])
#         elif minSz[index] >= 1:
#             T3_2.append(Loc2[index])

# power_fit(X1, T1_2)
# power_fit(X2, T2_2)
# power_fit(X3, T3_2)

# for index, value in enumerate(Loc3):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_3.append(Loc3[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_3.append(Loc3[index])
#         elif minSz[index] >= 1:
#             T3_3.append(Loc3[index])

# power_fit(X1, T1_3)
# power_fit(X2, T2_3)
# power_fit(X3, T3_3)

# for index, value in enumerate(Loc4):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_4.append(Loc4[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_4.append(Loc4[index])
#         elif minSz[index] >= 1:
#             T3_4.append(Loc4[index])

# power_fit(X1, T1_4)
# power_fit(X2, T2_4)
# power_fit(X3, T3_4)

# for index, value in enumerate(Loc6):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_6.append(Loc6[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_6.append(Loc6[index])
#         elif minSz[index] >= 1:
#             T3_6.append(Loc6[index])

# power_fit(X1, T1_6)
# power_fit(X2, T2_6)
# power_fit(X3, T3_6)

# for index, value in enumerate(Loc7):
#     if value != 0:
#         if minSz[index] <=0.250:
#             T1_7.append(Loc7[index])
#         elif minSz[index] > 0.250 and  minSz[index] < 1:
#             T2_7.append(Loc7[index])
#         elif minSz[index] >= 1:
#             T3_7.append(Loc7[index])

# power_fit(X1, T1_7)
# power_fit(X2, T2_7)
# power_fit(X3, T3_7)